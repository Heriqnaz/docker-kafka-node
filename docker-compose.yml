version: '3.7'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    restart: unless-stopped
    ports: ["2181:2181"]

  kafka:
    image: wurstmeister/kafka
    restart: unless-stopped
    ports: ["9092:9092"]
    hostname: kafka
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=test_topic:1:1
  database:
    image: postgres
    container_name: kafka-nodejs-database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test_db
    ports: [8000:5432]
    hostname: database
    volumes:
      - ./services/database/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
  producer:
    build: ./services/producer
    restart: unless-stopped
    ports: ["8080:8080"]
    command: ["./wait-for-it.sh", "kafka:9092", "zookeeper:2181", "--", "node", "src/producer.js"]
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  consumer:
    build: ./services/consumer
    restart: unless-stopped
    ports: ["8081:8081"]
    depends_on:
      - zookeeper
      - kafka
      - database
    command: ["./wait-for-it.sh", "database:5432", "kafka:9092", "zookeeper:2181", "--", "node", "src/consumer.js"]
    environment:
      PGHOST: database
      PGPORT: 5432
      PGUSER: postgres
      PGDATABASE: test_db
      PGPASSWORD: postgres
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181


